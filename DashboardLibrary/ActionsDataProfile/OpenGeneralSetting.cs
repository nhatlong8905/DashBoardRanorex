///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DashboardLibrary.ActionsDataProfile
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The OpenGeneralSetting recording.
    /// </summary>
    [TestModule("58b3d5f5-1f21-415f-91b3-94f23baf0249", ModuleType.Recording, 1)]
    public partial class OpenGeneralSetting : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::DashboardLibrary.DashboardLibraryRepository repository.
        /// </summary>
        public static global::DashboardLibrary.DashboardLibraryRepository repo = global::DashboardLibrary.DashboardLibraryRepository.Instance;

        static OpenGeneralSetting instance = new OpenGeneralSetting();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public OpenGeneralSetting()
        {
            varItemType = "";
            varItemDataProfile = "";
            varItemReport = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static OpenGeneralSetting Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable varItemDataProfile.
        /// </summary>
        [TestVariable("bc8c09dc-2fd8-41ac-ab34-74bc09534c66")]
        public string varItemDataProfile
        {
            get { return repo.varItemDataProfile; }
            set { repo.varItemDataProfile = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varItemType.
        /// </summary>
        [TestVariable("011758ba-82f4-430f-9f38-df0b41527783")]
        public string varItemType
        {
            get { return repo.varItemType; }
            set { repo.varItemType = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varItemReport.
        /// </summary>
        [TestVariable("ba525e2f-cd9e-47c9-a2f6-d8ed1546f584")]
        public string varItemReport
        {
            get { return repo.varItemReport; }
            set { repo.varItemReport = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TestArchitect.ActionsDataProfile.ItemDataProfile' at Center.", repo.TestArchitect.ActionsDataProfile.ItemDataProfileInfo, new RecordItemIndex(0));
            repo.TestArchitect.ActionsDataProfile.ItemDataProfile.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value=$varItemDataProfile) on item 'TestArchitect.ActionsDataProfile.CreateGeneralSettings.TxtProfileName'.", repo.TestArchitect.ActionsDataProfile.CreateGeneralSettings.TxtProfileNameInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TestArchitect.ActionsDataProfile.CreateGeneralSettings.TxtProfileNameInfo, "Value", varItemDataProfile);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$varItemType) on item 'TestArchitect.ActionsDataProfile.CreateGeneralSettings.CbbItemType'.", repo.TestArchitect.ActionsDataProfile.CreateGeneralSettings.CbbItemTypeInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.TestArchitect.ActionsDataProfile.CreateGeneralSettings.CbbItemTypeInfo, "TagValue", varItemType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$varItemReport) on item 'TestArchitect.ActionsDataProfile.CreateGeneralSettings.CbbSubReport'.", repo.TestArchitect.ActionsDataProfile.CreateGeneralSettings.CbbSubReportInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.TestArchitect.ActionsDataProfile.CreateGeneralSettings.CbbSubReportInfo, "TagValue", varItemReport);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
