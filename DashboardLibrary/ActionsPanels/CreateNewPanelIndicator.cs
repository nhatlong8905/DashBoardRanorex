///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DashboardLibrary.ActionsPanels
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateNewPanelIndicator recording.
    /// </summary>
    [TestModule("78d00609-e055-4b80-8dd8-40d0a87d3f32", ModuleType.Recording, 1)]
    public partial class CreateNewPanelIndicator : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::DashboardLibrary.DashboardLibraryRepository repository.
        /// </summary>
        public static global::DashboardLibrary.DashboardLibraryRepository repo = global::DashboardLibrary.DashboardLibraryRepository.Instance;

        static CreateNewPanelIndicator instance = new CreateNewPanelIndicator();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateNewPanelIndicator()
        {
            varDisplayName = "";
            varStatField = "";
            varStatFieldValue = "";
            varFromColor = "";
            varColor = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateNewPanelIndicator Instance
        {
            get { return instance; }
        }

#region Variables

        string _varStatField;

        /// <summary>
        /// Gets or sets the value of variable varStatField.
        /// </summary>
        [TestVariable("3684a1c9-7c9d-4097-a807-92e024f95b1f")]
        public string varStatField
        {
            get { return _varStatField; }
            set { _varStatField = value; }
        }

        string _varStatFieldValue;

        /// <summary>
        /// Gets or sets the value of variable varStatFieldValue.
        /// </summary>
        [TestVariable("8afbc51c-86dc-42d2-a4ff-009ac1fa9abc")]
        public string varStatFieldValue
        {
            get { return _varStatFieldValue; }
            set { _varStatFieldValue = value; }
        }

        string _varFromColor;

        /// <summary>
        /// Gets or sets the value of variable varFromColor.
        /// </summary>
        [TestVariable("c1a79576-0796-4f7f-9f0d-6b36b6f18e57")]
        public string varFromColor
        {
            get { return _varFromColor; }
            set { _varFromColor = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varNumber.
        /// </summary>
        [TestVariable("bed04538-02d3-4668-b23f-49c379f09b92")]
        public string varNumber
        {
            get { return repo.varNumber; }
            set { repo.varNumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varColor.
        /// </summary>
        [TestVariable("034aa0b1-fcc6-412d-96ef-e60539298691")]
        public string varColor
        {
            get { return repo.varColor; }
            set { repo.varColor = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varDisplayName.
        /// </summary>
        [TestVariable("90f1a91b-3a2c-4d34-9a21-cb828b3464ed")]
        public string varDisplayName
        {
            get { return repo.varDisplayName; }
            set { repo.varDisplayName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TestArchitect.Administers.AddNew' at Center.", repo.TestArchitect.Administers.AddNewInfo, new RecordItemIndex(0));
            repo.TestArchitect.Administers.AddNew.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TestArchitect.ActionsPanels.RadIndicatorType' at Center.", repo.TestArchitect.ActionsPanels.RadIndicatorTypeInfo, new RecordItemIndex(1));
            repo.TestArchitect.ActionsPanels.RadIndicatorType.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$varDisplayName' on item 'TestArchitect.ActionsPanels.TxtDisplayName'.", repo.TestArchitect.ActionsPanels.TxtDisplayNameInfo, new RecordItemIndex(2));
            repo.TestArchitect.ActionsPanels.TxtDisplayName.Element.SetAttributeValue("Value", varDisplayName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$varStatField' on item 'TestArchitect.ActionsPanels.Indicator.CbbStatField'.", repo.TestArchitect.ActionsPanels.Indicator.CbbStatFieldInfo, new RecordItemIndex(3));
            repo.TestArchitect.ActionsPanels.Indicator.CbbStatField.Element.SetAttributeValue("TagValue", varStatField);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$varStatFieldValue' on item 'TestArchitect.ActionsPanels.Indicator.CbbStatFieldValue'.", repo.TestArchitect.ActionsPanels.Indicator.CbbStatFieldValueInfo, new RecordItemIndex(4));
            repo.TestArchitect.ActionsPanels.Indicator.CbbStatFieldValue.Element.SetAttributeValue("TagValue", varStatFieldValue);
            Delay.Milliseconds(0);
            
            AddFromColor(repo.TestArchitect.ActionsPanels.Indicator.FromInfo, repo.TestArchitect.ActionsPanels.Indicator.TxtColorInfo, repo.TestArchitect.ActionsPanels.ColorInfo, repo.TestArchitect.ActionsPanels.BtnAddFromInfo, varFromColor);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TestArchitect.PageOK' at Center.", repo.TestArchitect.PageOKInfo, new RecordItemIndex(6));
            repo.TestArchitect.PageOK.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestArchitect.ActionsPanels.Indicator.NewPanel'.", repo.TestArchitect.ActionsPanels.Indicator.NewPanelInfo, new RecordItemIndex(7));
            Validate.Exists(repo.TestArchitect.ActionsPanels.Indicator.NewPanelInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
